create table public.bookmarked_papers (
  id bigint generated by default as identity,
  user_id uuid not null,
  paper_id bigint not null,
  created_at timestamp with time zone not null default now(),
  constraint bookmarked_papers_pkey primary key (id),
  constraint bookmarked_papers_user_id_fkey foreign key (user_id) references auth.users (id) on delete cascade,
  constraint bookmarked_papers_paper_id_fkey foreign key (paper_id) references public.research_papers (id) on delete cascade,
  constraint bookmarked_papers_user_id_paper_id_key unique (user_id, paper_id)
);

alter table public.bookmarked_papers enable row level security;

create policy "Users can view their own bookmarks"
on public.bookmarked_papers for select
using (auth.uid() = user_id);

create policy "Users can insert their own bookmarks"
on public.bookmarked_papers for insert
with check (auth.uid() = user_id);

create policy "Users can delete their own bookmarks"
on public.bookmarked_papers for delete
using (auth.uid() = user_id); 